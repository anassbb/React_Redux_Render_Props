{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\anasa\\\\Desktop\\\\work\\\\React.js\\\\desining React components\\\\refon\\\\src\\\\components\\\\Speakers\\\\Speakers.js\",\n    _this = this;\n\nimport React from \"react\";\nimport \"./withData\";\n\nvar Speakers = function Speakers(_ref) {\n  var speak = _ref.speak;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: speak.map(function (_ref2) {\n      var imageSrc = _ref2.imageSrc,\n          name = _ref2.name;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/\".concat(imageSrc, \".png\"),\n          alt: name\n        }, imageSrc, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Speakers;\nvar maxSpeakerToShow = 2;\nexport default withData(maxSpeakerToShow)(Speakers);\n\nvar _c;\n\n$RefreshReg$(_c, \"Speakers\");","map":{"version":3,"sources":["C:/Users/anasa/Desktop/work/React.js/desining React components/refon/src/components/Speakers/Speakers.js"],"names":["React","Speakers","speak","map","imageSrc","name","maxSpeakerToShow","withData"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAe,YAAf;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC9B,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CAAU,iBAAwB;AAAA,UAArBC,QAAqB,SAArBA,QAAqB;AAAA,UAAXC,IAAW,SAAXA,IAAW;AACjC,0BACE;AAAA,+BACE;AAAK,UAAA,GAAG,oBAAaD,QAAb,SAAR;AAAqC,UAAA,GAAG,EAAEC;AAA1C,WAAqDD,QAArD;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CAZD;;KAAMH,Q;AAcN,IAAMK,gBAAgB,GAAG,CAAzB;AACA,eAAeC,QAAQ,CAACD,gBAAD,CAAR,CAA2BL,QAA3B,CAAf","sourcesContent":["import React from \"react\";\r\nimport {} from \"./withData\";\r\n\r\nconst Speakers = ({ speak }) => {\r\n  return (\r\n    <div>\r\n      {speak.map(({ imageSrc, name }) => {\r\n        return (\r\n          <>\r\n            <img src={`/images/${imageSrc}.png`} alt={name} key={imageSrc} />\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst maxSpeakerToShow = 2;\r\nexport default withData(maxSpeakerToShow)(Speakers);\r\n"]},"metadata":{},"sourceType":"module"}