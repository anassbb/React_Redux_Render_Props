{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anasa\\\\Desktop\\\\work\\\\React.js\\\\desining React components\\\\refon\\\\src\\\\components\\\\Speakers\\\\Speakers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Speaker from '../Speaker/Speaker';\nimport axios from 'axios';\n\nconst Speakers = () => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  const {\n    0: speakers,\n    1: setSpeakers\n  } = useState([]);\n  const REQUEST_STATUS = {\n    LOADING: 'Loading',\n    SUCCESS: 'Success',\n    ERROR: 'error'\n  };\n\n  function toggleSpeakerFavorite(speakerRec) {\n    return _objectSpread(_objectSpread({}, speakerRec), {}, {\n      isFavorite: !speakerRec.isFavorite\n    });\n  }\n\n  const onFavoriteToggleHandler = async speakerRec => {\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\n    const speakerIndex = speakers.map(speaker => speaker.id).indexOf(speakerRec.id);\n    await axios.put(`http://localhost:4000/speakers/${speakerRec.id}`, toggledSpeakerRec);\n    setSpeakers([...speakers.slice(0, speakerIndex), toggledSpeakerRec, ...speakers.slice(speakerIndex + 1)]);\n  };\n\n  useEffect(() => {\n    debugger;\n\n    const fetchData = async () => {\n      const response = await axios.get('http://localhost:4000/speakers');\n      setSpeakers(response.data);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(rec => {\n        const targetString = `${rec.firstName}${rec.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_jsxDEV(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker)\n      }), speaker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/anasa/Desktop/work/React.js/desining React components/refon/src/components/Speakers/Speakers.js"],"names":["React","useState","useEffect","SearchBar","Speaker","axios","Speakers","searchQuery","setSearchQuery","speakers","setSpeakers","REQUEST_STATUS","LOADING","SUCCESS","ERROR","toggleSpeakerFavorite","speakerRec","isFavorite","onFavoriteToggleHandler","toggledSpeakerRec","speakerIndex","map","speaker","id","indexOf","put","slice","fetchData","response","get","data","filter","rec","targetString","firstName","lastName","toLowerCase","length","includes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMU,cAAc,GAAG;AACrBC,IAAAA,OAAO,EAAE,SADY;AAErBC,IAAAA,OAAO,EAAE,SAFY;AAGrBC,IAAAA,KAAK,EAAE;AAHc,GAAvB;;AAMA,WAASC,qBAAT,CAA+BC,UAA/B,EAA2C;AACzC,2CACKA,UADL;AAEEC,MAAAA,UAAU,EAAE,CAACD,UAAU,CAACC;AAF1B;AAID;;AAED,QAAMC,uBAAuB,GAAG,MAAOF,UAAP,IAAsB;AACpD,UAAMG,iBAAiB,GAAGJ,qBAAqB,CAACC,UAAD,CAA/C;AACA,UAAMI,YAAY,GAAGX,QAAQ,CAC1BY,GADkB,CACbC,OAAD,IAAaA,OAAO,CAACC,EADP,EAElBC,OAFkB,CAEVR,UAAU,CAACO,EAFD,CAArB;AAIA,UAAMlB,KAAK,CAACoB,GAAN,CACH,kCAAiCT,UAAU,CAACO,EAAG,EAD5C,EAEJJ,iBAFI,CAAN;AAIAT,IAAAA,WAAW,CAAC,CACV,GAAGD,QAAQ,CAACiB,KAAT,CAAe,CAAf,EAAkBN,YAAlB,CADO,EAEVD,iBAFU,EAGV,GAAGV,QAAQ,CAACiB,KAAT,CAAeN,YAAY,GAAG,CAA9B,CAHO,CAAD,CAAX;AAKD,GAfD;;AAiBAlB,EAAAA,SAAS,CAAC,MAAM;AACd;;AACA,UAAMyB,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,gCAAV,CAAvB;AACAnB,MAAAA,WAAW,CAACkB,QAAQ,CAACE,IAAV,CAAX;AACD,KAHD;;AAIAH,IAAAA,SAAS;AACV,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEpB,WAAxB;AAAqC,MAAA,cAAc,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACGC,QAAQ,CACNsB,MADF,CACUC,GAAD,IAAS;AACf,cAAMC,YAAY,GAAI,GAAED,GAAG,CAACE,SAAU,GAAEF,GAAG,CAACG,QAAS,EAAhC,CAAkCC,WAAlC,EAArB;AACA,eAAO7B,WAAW,CAAC8B,MAAZ,KAAuB,CAAvB,GACH,IADG,GAEHJ,YAAY,CAACK,QAAb,CAAsB/B,WAAW,CAAC6B,WAAZ,EAAtB,CAFJ;AAGD,OANF,EAOEf,GAPF,CAOOC,OAAD,iBACH,QAAC,OAAD,kCAEMA,OAFN;AAGE,QAAA,gBAAgB,EAAE,MAAMJ,uBAAuB,CAACI,OAAD;AAHjD,UACOA,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cARH;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAhED;;AAkEA,eAAejB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport Speaker from '../Speaker/Speaker';\r\nimport axios from 'axios';\r\n\r\nconst Speakers = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [speakers, setSpeakers] = useState([]);\r\n\r\n  const REQUEST_STATUS = {\r\n    LOADING: 'Loading',\r\n    SUCCESS: 'Success',\r\n    ERROR: 'error',\r\n  };\r\n\r\n  function toggleSpeakerFavorite(speakerRec) {\r\n    return {\r\n      ...speakerRec,\r\n      isFavorite: !speakerRec.isFavorite,\r\n    };\r\n  }\r\n\r\n  const onFavoriteToggleHandler = async (speakerRec) => {\r\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\r\n    const speakerIndex = speakers\r\n      .map((speaker) => speaker.id)\r\n      .indexOf(speakerRec.id);\r\n\r\n    await axios.put(\r\n      `http://localhost:4000/speakers/${speakerRec.id}`,\r\n      toggledSpeakerRec,\r\n    );\r\n    setSpeakers([\r\n      ...speakers.slice(0, speakerIndex),\r\n      toggledSpeakerRec,\r\n      ...speakers.slice(speakerIndex + 1),\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    const fetchData = async () => {\r\n      const response = await axios.get('http://localhost:4000/speakers');\r\n      setSpeakers(response.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n        {speakers\r\n          .filter((rec) => {\r\n            const targetString = `${rec.firstName}${rec.lastName}`.toLowerCase();\r\n            return searchQuery.length === 0\r\n              ? true\r\n              : targetString.includes(searchQuery.toLowerCase());\r\n          })\r\n          .map((speaker) => (\r\n            <Speaker\r\n              key={speaker.id}\r\n              {...speaker}\r\n              onFavoriteToggle={() => onFavoriteToggleHandler(speaker)}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}