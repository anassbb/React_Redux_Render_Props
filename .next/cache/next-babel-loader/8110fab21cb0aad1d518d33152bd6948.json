{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anasa\\\\Desktop\\\\work\\\\React.js\\\\desining React components\\\\refon\\\\src\\\\components\\\\Speakers\\\\Speakers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Speaker from '../Speaker/Speaker';\nimport axios from 'axios';\n\nconst Speakers = () => {\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState('');\n  const REQUEST_STATUS = {\n    LOADING: 'Loading',\n    SUCCESS: 'Success',\n    ERROR: 'error'\n  };\n\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case 'GET_ALL_SUCCESS':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: REQUEST_STATUS.SUCCESS,\n          speakers: action.speakers\n        });\n\n      case 'UPDATE_STATUS':\n        return _objectSpread(_objectSpread({}, state), {}, {\n          status: action.status\n        });\n    }\n  };\n\n  const {\n    0: {\n      speakers,\n      status\n    },\n    1: dispatch\n  } = useReducer(reducer, {\n    speakers: [],\n    status: REQUEST_STATUS.LOADING\n  });\n  const {\n    0: error,\n    1: setError\n  } = useState({});\n\n  function toggleSpeakerFavorite(speakerRec) {\n    return _objectSpread(_objectSpread({}, speakerRec), {}, {\n      isFavorite: !speakerRec.isFavorite\n    });\n  }\n\n  const onFavoriteToggleHandler = async speakerRec => {\n    debugger;\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\n    const speakerIndex = speakers.map(speaker => speaker.id).indexOf(speakerRec.id);\n\n    try {\n      await axios.put(`http://localhost:4000/speakers/${speakerRec.id}`, toggledSpeakerRec);\n      dispatch([...speakers.slice(0, speakerIndex), toggledSpeakerRec, ...speakers.slice(speakerIndex + 1)]);\n    } catch (e) {\n      dispatch({\n        status: REQUEST_STATUS.ERROR,\n        type: 'UPDATE_STATUS'\n      });\n      setError(e);\n    }\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:4000/speakers');\n        dispatch({\n          speakers: response.data,\n          type: 'GET_ALL_SUCCESS'\n        });\n        dispatch({\n          status: REQUEST_STATUS.SUCCESS,\n          type: 'UPDATE_STATUS'\n        });\n      } catch (e) {\n        dispatch({\n          status: REQUEST_STATUS.ERROR,\n          type: 'UPDATE_STATUS'\n        });\n        setError(e);\n      }\n    };\n\n    fetchData();\n  }, [status]);\n  const success = status === REQUEST_STATUS.SUCCESS;\n  const isLoading = status === REQUEST_STATUS.LOADING;\n  const hasErrored = status === REQUEST_STATUS.ERROR;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this), hasErrored && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading error... Is the json-Server running? (try \\\"npm run json-server\\\") at terminal prompt\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\"ERROR: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(rec => {\n        const targetString = `${rec.firstName}${rec.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_jsxDEV(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker)\n      }), speaker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/anasa/Desktop/work/React.js/desining React components/refon/src/components/Speakers/Speakers.js"],"names":["React","useState","useEffect","useReducer","SearchBar","Speaker","axios","Speakers","searchQuery","setSearchQuery","REQUEST_STATUS","LOADING","SUCCESS","ERROR","reducer","state","action","type","status","speakers","dispatch","error","setError","toggleSpeakerFavorite","speakerRec","isFavorite","onFavoriteToggleHandler","toggledSpeakerRec","speakerIndex","map","speaker","id","indexOf","put","slice","e","fetchData","response","get","data","success","isLoading","hasErrored","message","filter","rec","targetString","firstName","lastName","toLowerCase","length","includes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,WAAD;AAAA,OAAcC;AAAd,MAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMS,cAAc,GAAG;AACrBC,IAAAA,OAAO,EAAE,SADY;AAErBC,IAAAA,OAAO,EAAE,SAFY;AAGrBC,IAAAA,KAAK,EAAE;AAHc,GAAvB;;AAMA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,iBAAL;AACE,+CACKF,KADL;AAEEG,UAAAA,MAAM,EAAER,cAAc,CAACE,OAFzB;AAGEO,UAAAA,QAAQ,EAAEH,MAAM,CAACG;AAHnB;;AAKF,WAAK,eAAL;AACE,+CAAYJ,KAAZ;AAAmBG,UAAAA,MAAM,EAAEF,MAAM,CAACE;AAAlC;AARJ;AAUD,GAXD;;AAaA,QAAM;AAAA,OAAC;AAAEC,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,KAAD;AAAA,OAAuBE;AAAvB,MAAmCjB,UAAU,CAACW,OAAD,EAAU;AAC3DK,IAAAA,QAAQ,EAAE,EADiD;AAE3DD,IAAAA,MAAM,EAAER,cAAc,CAACC;AAFoC,GAAV,CAAnD;AAKA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASsB,qBAAT,CAA+BC,UAA/B,EAA2C;AACzC,2CACKA,UADL;AAEEC,MAAAA,UAAU,EAAE,CAACD,UAAU,CAACC;AAF1B;AAID;;AAED,QAAMC,uBAAuB,GAAG,MAAOF,UAAP,IAAsB;AACpD;AACA,UAAMG,iBAAiB,GAAGJ,qBAAqB,CAACC,UAAD,CAA/C;AACA,UAAMI,YAAY,GAAGT,QAAQ,CAC1BU,GADkB,CACbC,OAAD,IAAaA,OAAO,CAACC,EADP,EAElBC,OAFkB,CAEVR,UAAU,CAACO,EAFD,CAArB;;AAIA,QAAI;AACF,YAAMzB,KAAK,CAAC2B,GAAN,CACH,kCAAiCT,UAAU,CAACO,EAAG,EAD5C,EAEJJ,iBAFI,CAAN;AAIAP,MAAAA,QAAQ,CAAC,CACP,GAAGD,QAAQ,CAACe,KAAT,CAAe,CAAf,EAAkBN,YAAlB,CADI,EAEPD,iBAFO,EAGP,GAAGR,QAAQ,CAACe,KAAT,CAAeN,YAAY,GAAG,CAA9B,CAHI,CAAD,CAAR;AAKD,KAVD,CAUE,OAAOO,CAAP,EAAU;AACVf,MAAAA,QAAQ,CAAC;AACPF,QAAAA,MAAM,EAAER,cAAc,CAACG,KADhB;AAEPI,QAAAA,IAAI,EAAE;AAFC,OAAD,CAAR;AAIAK,MAAAA,QAAQ,CAACa,CAAD,CAAR;AACD;AACF,GAxBD;;AA0BAjC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,GAAN,CAAU,gCAAV,CAAvB;AACAlB,QAAAA,QAAQ,CAAC;AAAED,UAAAA,QAAQ,EAAEkB,QAAQ,CAACE,IAArB;AAA2BtB,UAAAA,IAAI,EAAE;AAAjC,SAAD,CAAR;AACAG,QAAAA,QAAQ,CAAC;AAAEF,UAAAA,MAAM,EAAER,cAAc,CAACE,OAAzB;AAAkCK,UAAAA,IAAI,EAAE;AAAxC,SAAD,CAAR;AACD,OAJD,CAIE,OAAOkB,CAAP,EAAU;AACVf,QAAAA,QAAQ,CAAC;AACPF,UAAAA,MAAM,EAAER,cAAc,CAACG,KADhB;AAEPI,UAAAA,IAAI,EAAE;AAFC,SAAD,CAAR;AAIAK,QAAAA,QAAQ,CAACa,CAAD,CAAR;AACD;AACF,KAZD;;AAaAC,IAAAA,SAAS;AACV,GAfQ,EAeN,CAAClB,MAAD,CAfM,CAAT;AAiBA,QAAMsB,OAAO,GAAGtB,MAAM,KAAKR,cAAc,CAACE,OAA1C;AACA,QAAM6B,SAAS,GAAGvB,MAAM,KAAKR,cAAc,CAACC,OAA5C;AACA,QAAM+B,UAAU,GAAGxB,MAAM,KAAKR,cAAc,CAACG,KAA7C;AAEA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEL,WAAxB;AAAqC,MAAA,cAAc,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGgC,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGGC,UAAU,iBACT;AAAA,+HAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,8BAAWrB,KAAK,CAACsB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAWGH,OAAO,iBACN;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACGrB,QAAQ,CACNyB,MADF,CACUC,GAAD,IAAS;AACf,cAAMC,YAAY,GAAI,GAAED,GAAG,CAACE,SAAU,GAAEF,GAAG,CAACG,QAAS,EAAhC,CAAkCC,WAAlC,EAArB;AACA,eAAOzC,WAAW,CAAC0C,MAAZ,KAAuB,CAAvB,GACH,IADG,GAEHJ,YAAY,CAACK,QAAb,CAAsB3C,WAAW,CAACyC,WAAZ,EAAtB,CAFJ;AAGD,OANF,EAOEpB,GAPF,CAOOC,OAAD,iBACH,QAAC,OAAD,kCAEMA,OAFN;AAGE,QAAA,gBAAgB,EAAE,MAAMJ,uBAAuB,CAACI,OAAD;AAHjD,UACOA,OAAO,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cARH;AADH;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAlHD;;AAoHA,eAAexB,QAAf","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport Speaker from '../Speaker/Speaker';\r\nimport axios from 'axios';\r\n\r\nconst Speakers = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const REQUEST_STATUS = {\r\n    LOADING: 'Loading',\r\n    SUCCESS: 'Success',\r\n    ERROR: 'error',\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'GET_ALL_SUCCESS':\r\n        return {\r\n          ...state,\r\n          status: REQUEST_STATUS.SUCCESS,\r\n          speakers: action.speakers,\r\n        };\r\n      case 'UPDATE_STATUS':\r\n        return { ...state, status: action.status };\r\n    }\r\n  };\r\n\r\n  const [{ speakers, status }, dispatch] = useReducer(reducer, {\r\n    speakers: [],\r\n    status: REQUEST_STATUS.LOADING,\r\n  });\r\n\r\n  const [error, setError] = useState({});\r\n\r\n  function toggleSpeakerFavorite(speakerRec) {\r\n    return {\r\n      ...speakerRec,\r\n      isFavorite: !speakerRec.isFavorite,\r\n    };\r\n  }\r\n\r\n  const onFavoriteToggleHandler = async (speakerRec) => {\r\n    debugger;\r\n    const toggledSpeakerRec = toggleSpeakerFavorite(speakerRec);\r\n    const speakerIndex = speakers\r\n      .map((speaker) => speaker.id)\r\n      .indexOf(speakerRec.id);\r\n\r\n    try {\r\n      await axios.put(\r\n        `http://localhost:4000/speakers/${speakerRec.id}`,\r\n        toggledSpeakerRec,\r\n      );\r\n      dispatch([\r\n        ...speakers.slice(0, speakerIndex),\r\n        toggledSpeakerRec,\r\n        ...speakers.slice(speakerIndex + 1),\r\n      ]);\r\n    } catch (e) {\r\n      dispatch({\r\n        status: REQUEST_STATUS.ERROR,\r\n        type: 'UPDATE_STATUS',\r\n      });\r\n      setError(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/speakers');\r\n        dispatch({ speakers: response.data, type: 'GET_ALL_SUCCESS' });\r\n        dispatch({ status: REQUEST_STATUS.SUCCESS, type: 'UPDATE_STATUS' });\r\n      } catch (e) {\r\n        dispatch({\r\n          status: REQUEST_STATUS.ERROR,\r\n          type: 'UPDATE_STATUS',\r\n        });\r\n        setError(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [status]);\r\n\r\n  const success = status === REQUEST_STATUS.SUCCESS;\r\n  const isLoading = status === REQUEST_STATUS.LOADING;\r\n  const hasErrored = status === REQUEST_STATUS.ERROR;\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      {isLoading && <div>Loading...</div>}\r\n      {hasErrored && (\r\n        <div>\r\n          Loading error... Is the json-Server running? (try \"npm run\r\n          json-server\") at terminal prompt\r\n          <br />\r\n          <b>ERROR: {error.message}</b>\r\n        </div>\r\n      )}\r\n      {success && (\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n          {speakers\r\n            .filter((rec) => {\r\n              const targetString = `${rec.firstName}${rec.lastName}`.toLowerCase();\r\n              return searchQuery.length === 0\r\n                ? true\r\n                : targetString.includes(searchQuery.toLowerCase());\r\n            })\r\n            .map((speaker) => (\r\n              <Speaker\r\n                key={speaker.id}\r\n                {...speaker}\r\n                onFavoriteToggle={() => onFavoriteToggleHandler(speaker)}\r\n              />\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}