{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anasa\\\\Desktop\\\\work\\\\React.js\\\\desining React components\\\\refon\\\\src\\\\components\\\\Speakers\\\\Speakers.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Speaker from \"../Speaker/Speaker\";\n\nconst Speakers = () => {\n  const speakersArray = [{\n    imageSrc: \"speaker-component-1124\",\n    name: \"Douglas Crockford\",\n    id: 1124,\n    firstName: \"Douglas\",\n    lastName: \"Crockford\",\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: \"Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.\"\n  }, {\n    imageSrc: \"speaker-component-1530\",\n    name: \"Tamara Baker\",\n    id: 1530,\n    firstName: \"Tamara\",\n    lastName: \"Baker\",\n    sat: false,\n    sun: true,\n    isFavorite: true,\n    bio: \"Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.\"\n  }, {\n    imageSrc: \"speaker-component-10803\",\n    name: \"Eugene Chuvyrov\",\n    id: 10803,\n    firstName: \"Eugene\",\n    lastName: \"Chuvyrov\",\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: \"Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.\"\n  }, {\n    imageSrc: \"speaker-component-10803\",\n    name: \"Anas Abbassi\",\n    id: 10803,\n    firstName: \"Anas\",\n    lastName: \"Abbassi\",\n    sat: true,\n    sun: false,\n    isFavorite: false,\n    bio: \"Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.\"\n  }];\n  const {\n    0: searchQuery,\n    1: setSearchQuery\n  } = useState(\"\");\n  const {\n    0: speakers,\n    1: setSpeakers\n  } = useState(speakersArray);\n\n  function toggleSpeakerFavorite(speakerRec) {\n    return _objectSpread(_objectSpread({}, speakerRec), {}, {\n      isFavorite: !speakerRec.isFavorite\n    });\n  }\n\n  const onFavoriteToggleHandler = speaker => {\n    const toggledSpeakerRec = toggleSpeakerFavorite(speaker);\n    const speakerIndex = speakers.map(speaker => speaker.id).indexOf(speakerRec.id);\n    setSpeaker([...speakers.slice]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\",\n      children: speakers.filter(rec => {\n        const targetString = `${rec.firstName}${rec.lastName}`.toLowerCase();\n        return searchQuery.length === 0 ? true : targetString.includes(searchQuery.toLowerCase());\n      }).map(speaker => /*#__PURE__*/_jsxDEV(Speaker, _objectSpread(_objectSpread({}, speaker), {}, {\n        onFavoriteToggle: () => onFavoriteToggleHandler(speaker)\n      }), speaker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/anasa/Desktop/work/React.js/desining React components/refon/src/components/Speakers/Speakers.js"],"names":["React","useState","SearchBar","Speaker","Speakers","speakersArray","imageSrc","name","id","firstName","lastName","sat","sun","isFavorite","bio","searchQuery","setSearchQuery","speakers","setSpeakers","toggleSpeakerFavorite","speakerRec","onFavoriteToggleHandler","speaker","toggledSpeakerRec","speakerIndex","map","indexOf","setSpeaker","slice","filter","rec","targetString","toLowerCase","length","includes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport Speaker from \"../Speaker/Speaker\";\r\n\r\nconst Speakers = () => {\r\n  const speakersArray = [\r\n    {\r\n      imageSrc: \"speaker-component-1124\",\r\n      name: \"Douglas Crockford\",\r\n      id: 1124,\r\n      firstName: \"Douglas\",\r\n      lastName: \"Crockford\",\r\n      sat: true,\r\n      sun: false,\r\n      isFavorite: false,\r\n      bio:\r\n        \"Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.\",\r\n    },\r\n    {\r\n      imageSrc: \"speaker-component-1530\",\r\n      name: \"Tamara Baker\",\r\n      id: 1530,\r\n      firstName: \"Tamara\",\r\n      lastName: \"Baker\",\r\n      sat: false,\r\n      sun: true,\r\n      isFavorite: true,\r\n      bio:\r\n        \"Tammy has held a number of executive and management roles over the past 15 years, including VP engineering Roles at Molekule Inc., Cantaloupe Systems, E-Color, and Untangle Inc.\",\r\n    },\r\n    {\r\n      imageSrc: \"speaker-component-10803\",\r\n      name: \"Eugene Chuvyrov\",\r\n      id: 10803,\r\n      firstName: \"Eugene\",\r\n      lastName: \"Chuvyrov\",\r\n      sat: true,\r\n      sun: false,\r\n      isFavorite: false,\r\n      bio:\r\n        \"Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.\",\r\n    },\r\n    {\r\n      imageSrc: \"speaker-component-10803\",\r\n      name: \"Anas Abbassi\",\r\n      id: 10803,\r\n      firstName: \"Anas\",\r\n      lastName: \"Abbassi\",\r\n      sat: true,\r\n      sun: false,\r\n      isFavorite: false,\r\n      bio:\r\n        \"Eugene Chuvyrov is  a Senior Cloud Architect at Microsoft. He works directly with both startups and enterprises to enable their solutions in Microsoft cloud, and to make Azure better as a result of this work with partners.\",\r\n    },\r\n  ];\r\n\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [speakers, setSpeakers] = useState(speakersArray);\r\n\r\n  function toggleSpeakerFavorite(speakerRec) {\r\n    return {\r\n      ...speakerRec,\r\n      isFavorite: !speakerRec.isFavorite,\r\n    };\r\n  }\r\n  const onFavoriteToggleHandler = (speaker) => {\r\n    const toggledSpeakerRec = toggleSpeakerFavorite(speaker);\r\n    const speakerIndex = speakers\r\n      .map((speaker) => speaker.id)\r\n      .indexOf(speakerRec.id);\r\n    setSpeaker([...speakers.slice]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SearchBar searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 grid-cols-1 gap-12\">\r\n        {speakers\r\n          .filter((rec) => {\r\n            const targetString = `${rec.firstName}${rec.lastName}`.toLowerCase();\r\n            return searchQuery.length === 0\r\n              ? true\r\n              : targetString.includes(searchQuery.toLowerCase());\r\n          })\r\n          .map((speaker) => (\r\n            <Speaker\r\n              key={speaker.id}\r\n              {...speaker}\r\n              onFavoriteToggle={() => onFavoriteToggleHandler(speaker)}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Speakers;\r\n"]},"metadata":{},"sourceType":"module"}